apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf 
  namespace: astonvilla
data:
  nginx.conf: |
    user nginx;
    events {
      worker_connections 768;
    }

    http {
      server {
        listen 80;
        root /usr/nour/nginx/kubernetes;
        index kubernetes.html;
        location / {
            autoindex on;
        }
      }
    }
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc
  namespace: astonvilla
spec: 
  storageClassName: standard
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  namespace: astonvilla
spec:
 selector:
   matchLabels:
     app: clear-nginx
 template:
    metadata:
      labels:
        app: clear-nginx
    spec:
      initContainers:
      - name: init-container
        image: busybox
        command: ['sh', '-c','mkdir -p /usr/nour/nginx/kubernetes &&  echo "Hello k8s" > /usr/nour/nginx/kubernetes/kubernetes.html']
        volumeMounts:
        - name: site-data
          mountPath: /usr/nour/nginx/kubernetes   
      containers:
        - name: clear
          image: nginx
          volumeMounts:
          - mountPath: /usr/nour/nginx/kubernetes    
            name: site-data
          - mountPath: /etc/nginx/nginx.conf
            name: nginx-config
            subPath:  nginx.conf
      volumes:
      - name : site-data
        persistentVolumeClaim:
         claimName: pvc 
      - name: nginx-config
        configMap:
          name: nginx-conf 
          items: 
            - key:  nginx.conf
              path: nginx.conf
          
        
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
  namespace: astonvilla
spec:
  selector:
    app: clear-nginx
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80